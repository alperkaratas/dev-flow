[{"/Users/alperkaratas/Desktop/dev-flow/src/reportWebVitals.js":"1","/Users/alperkaratas/Desktop/dev-flow/src/Home.js":"2","/Users/alperkaratas/Desktop/dev-flow/src/index.js":"3"},{"size":362,"mtime":1610010527594,"results":"4","hashOfConfig":"5"},{"size":16913,"mtime":1610319673232,"results":"6","hashOfConfig":"5"},{"size":545,"mtime":1610016080427,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cjkwol",{"filePath":"10","messages":"11","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alperkaratas/Desktop/dev-flow/src/reportWebVitals.js",[],"/Users/alperkaratas/Desktop/dev-flow/src/Home.js",["15","16","17","18","19","20","21","22","23"],"/* eslint-disable no-restricted-globals */\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Input,\n  Card,\n  Message,\n  Image,\n  Feed,\n  Divider,\n  Popup,\n} from \"semantic-ui-react\";\nimport logo from \"./logo.png\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport FlatList from \"flatlist-react\";\n\nconst Home = () => {\n  const [githubSearch, setGithubSearch] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [getUserData, setGetUserData] = useState([{}]);\n  const [userStatus, setUserStatus] = useState(\"400\");\n  const [getRepoName, setGetRepoName] = useState([{}]);\n  const [getEventsData, setGetEventsData] = useState([]);\n\n  const githubAvatar = `https://avatars.githubusercontent.com/${githubSearch}`;\n\n  const getUsersData = async () => {\n    const response = await axios.get(\n      `https://api.github.com/users/${githubSearch}`,\n      {\n        headers: {\n          Accept: \"d4b4841127d390e1c0c425da6b131a378d19f34c\",\n        },\n      }\n    );\n    setGetUserData(response.data);\n    setUserStatus(response.status);\n  };\n\n  const getRepo = async () => {\n    const response = await axios.get(\n      `https://api.github.com/users/${githubSearch}/repos`,\n      {\n        headers: {\n          Accept: \"your personel access token\",\n        },\n      }\n    );\n    setGetRepoName(response.data);\n  };\n\n  const getEventData = async () => {\n    const response1 = await axios.get(\n      ` https://api.github.com/users/${githubSearch}/events`,\n      {\n        headers: {\n          Accept: \"your personel access token\",\n        },\n      }\n    );\n    setGetEventsData(response1.data);\n  };\n  const getAllData = () => {\n    getUsersData();\n    getRepo();\n    getEventData();\n    setGithubSearch(searchText);\n  };\n\n  const renderEvent = (item) => {\n    const navigateRepo = `https://github.com/${item.repo.name}`;\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}>\n        <Feed>\n          <Feed.Event>\n            <Feed.Label>\n              <img src={githubAvatar} />\n            </Feed.Label>\n            <Feed.Content>\n              <Feed.Summary>\n                <Feed.User>{getUserData.name}</Feed.User> {item.type}\n              </Feed.Summary>\n              <Feed.Meta on>\n                <Feed.Like>\n                  <Icon name=\"linkify\" />{\" \"}\n                  <a href={navigateRepo} target=\"_blank\">\n                    {item.repo.name}\n                  </a>\n                </Feed.Like>\n                <Feed.Extra>\n                  Action:{\" \"}\n                  {item.payload.action == null ? \"pushed\" : item.payload.action}{\" \"}\n                  @{moment(item.created_at).format(\"Do MMM YYYY\")}\n                </Feed.Extra>\n              </Feed.Meta>\n            </Feed.Content>\n          </Feed.Event>\n          <Divider className=\"divider-a\" />\n        </Feed>\n      </div>\n    );\n  };\n\n  const githubGraph = `https://grass-graph.moshimo.works/images/${githubSearch}.png`;\n  const githubStats = `https://github-readme-stats.vercel.app/api?username=${githubSearch}&show_icons=true&theme=default`;\n  return (\n    <div className=\"App\">\n      <div className=\"App-logo\">\n        <img width={90} height={90} src={logo} alt=\"Logo\" />\n      </div>\n      <div className=\"button-container\">\n        <Button\n          onClick={() =>\n            window.open(\n              \"https://www.linkedin.com/in/alper-karata%C5%9F-071095109/\",\n              \"_blank\"\n            )\n          }\n          color=\"linkedin\"\n        >\n          <Icon name=\"linkedin\" /> LinkedIn\n        </Button>\n        <Button\n          onClick={() =>\n            window.open(\"https://github.com/alperkaratas\", \"_blank\")\n          }\n          color=\"black\"\n        >\n          <Icon name=\"github\" /> GitHub\n        </Button>\n        <Button\n          onClick={() =>\n            window.open(\"https://twitter.com/alpkaratass\", \"_blank\")\n          }\n          color=\"twitter\"\n        >\n          <Icon name=\"twitter\" /> Twitter\n        </Button>\n        <Button\n          className=\"search-logo\"\n          onClick={() => window.open(\"mailto:alpkrts3@gmail.com\")}\n          color=\"red\"\n        >\n          <Icon name=\"mail outline\" /> Mail\n        </Button>\n        <div style={{ marginTop: 2 }}>\n          <a\n            href=\"https://www.producthunt.com/posts/dev-flow?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-dev-flow\"\n            target=\"_blank\"\n          >\n            <img\n              src=\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=280541&theme=dark\"\n              alt=\"dev-flow - View GitHub statistics and timeline by username. | Product Hunt\"\n              style={{ width: 150 }}\n              width=\"250\"\n              height=\"54\"\n            />\n          </a>\n        </div>\n      </div>\n      <div style={{ marginTop: 13, marginBottom: 13 }}>\n        <p>\n          Created by{\" \"}\n          <a\n            href=\"https://github.com/alperkaratas\"\n            target=\"_blank\"\n            style={{ textDecoration: \"underline\" }}\n          >\n            @alperkaratas\n          </a>\n          {\", \"}\n          @January / 2021 🎉\n        </p>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div>\n          <div className=\"search-button\">\n            <Input\n              size=\"big\"\n              icon=\"github\"\n              iconPosition=\"left\"\n              placeholder=\"Search username...\"\n              onChange={(event) => setSearchText(event.target.value)}\n            />\n            <div style={{ marginLeft: 5 }}>\n              <Popup\n                content=\"👉 First click = get datas from api  👉 Second click = visualize data\"\n                trigger={\n                  <Button onClick={() => getAllData()} circular icon=\"search\" />\n                }\n              />\n            </div>\n          </div>\n          {githubSearch === \"\" && userStatus != \"200\" ? (\n            <div\n              style={{\n                margin: 20,\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Message info>\n                <Message.Header className=\"text-25\">\n                  How it works?\n                </Message.Header>\n                <p style={{ marginTop: 10 }}>\n                  Enter the username of the person whose GitHub status you want\n                  to see and review it 🙂\n                </p>\n                <p style={{ marginTop: 10 }}>📌</p>\n                <p style={{ marginTop: 10 }}>\n                  👉 First search click = get datas from api{\" \"}\n                </p>\n                <p style={{ marginTop: 10 }}>\n                  👉 Second click = visualize data\n                </p>\n              </Message>\n            </div>\n          ) : userStatus == \"200\" ? (\n            <div>\n              <div style={{ margin: 20, marginTop: 50 }}>\n                <div\n                  style={{\n                    margin: 20,\n                    marginTop: 50,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Card>\n                    <Image src={githubAvatar} wrapped ui={false} />\n                    <Card.Content>\n                      <Card.Header>{githubSearch}</Card.Header>\n                      <Card.Meta>\n                        <span className=\"date\">{getUserData.name}</span>\n                      </Card.Meta>\n                      <Card.Description>{getUserData.bio}</Card.Description>\n                      <Card.Description className=\"user-location\">\n                        {getUserData.location}\n                      </Card.Description>\n                      {getUserData.twitter_username == null ? null : (\n                        <Card.Description className=\"user-location\">\n                          <button\n                            onClick={() =>\n                              window.open(\n                                `https://twitter.com/${getUserData.twitter_username}`,\n                                \"_blank\"\n                              )\n                            }\n                            color=\"twitter\"\n                            class=\"circular ui icon button\"\n                          >\n                            <i class=\"icon twitter\" color=\"twitter\"></i>\n                          </button>\n                          <button\n                            onClick={() =>\n                              window.open(\n                                `https://github.com/${githubSearch}`,\n                                \"_blank\"\n                              )\n                            }\n                            class=\"circular ui icon button\"\n                          >\n                            <i class=\"icon github\" color=\"github\"></i>\n                          </button>\n                        </Card.Description>\n                      )}\n                    </Card.Content>\n                  </Card>\n                </div>\n                <div style={{ marginTop: 15 }}>\n                  <img src={githubStats} />\n                </div>\n                <div style={{ marginTop: 30 }}>\n                  <img src={githubGraph} />\n                </div>\n                <div style={{ marginTop: 20, marginBottom: 20 }}>\n                  <Button\n                    onClick={() =>\n                      window.open(\n                        `https://twitter.com/intent/tweet?text=Hey!%20You%20can%20see%20my%20GitHub%20summary%20here%20(search word: ${githubSearch}) 👉 &url=https://dev-flow.netlify.app/`,\n                        \"_blank\"\n                      )\n                    }\n                    color=\"twitter\"\n                  >\n                    <Icon name=\"twitter\" /> Share on Twitter\n                  </Button>\n                </div>\n                <div>\n                  <Card.Group className=\"repos-container\" itemsPerRow={3}>\n                    {getRepoName[0] == null ? null : (\n                      <Card\n                        onClick={() =>\n                          window.open(getRepoName[0].html_url, \"_blank\")\n                        }\n                        color=\"red\"\n                        image={`https://github-readme-stats.vercel.app/api/pin/?username=${githubSearch}&repo=${getRepoName[0].name}`}\n                      />\n                    )}\n                    {getRepoName[1] == null ? null : (\n                      <Card\n                        onClick={() =>\n                          window.open(getRepoName[1].html_url, \"_blank\")\n                        }\n                        color=\"black\"\n                        image={`https://github-readme-stats.vercel.app/api/pin/?username=${githubSearch}&repo=${getRepoName[1].name}`}\n                      />\n                    )}\n\n                    {getRepoName[2] == null ? null : (\n                      <Card\n                        onClick={() =>\n                          window.open(getRepoName[2].html_url, \"_blank\")\n                        }\n                        color=\"blue\"\n                        image={`https://github-readme-stats.vercel.app/api/pin/?username=${githubSearch}&repo=${getRepoName[2].name}`}\n                      />\n                    )}\n\n                    {getRepoName[3] == null ? null : (\n                      <Card\n                        onClick={() =>\n                          window.open(getRepoName[3].html_url, \"_blank\")\n                        }\n                        color=\"purple\"\n                        image={`https://github-readme-stats.vercel.app/api/pin/?username=${githubSearch}&repo=${getRepoName[3].name}`}\n                      />\n                    )}\n\n                    {getRepoName[4] == null ? null : (\n                      <Card\n                        onClick={() =>\n                          window.open(getRepoName[4].html_url, \"_blank\")\n                        }\n                        color=\"yellow\"\n                        image={`https://github-readme-stats.vercel.app/api/pin/?username=${githubSearch}&repo=${getRepoName[4].name}`}\n                      />\n                    )}\n\n                    {getRepoName[5] == null ? null : (\n                      <Card\n                        onClick={() =>\n                          window.open(getRepoName[5].html_url, \"_blank\")\n                        }\n                        color=\"green\"\n                        image={`https://github-readme-stats.vercel.app/api/pin/?username=${githubSearch}&repo=${getRepoName[5].name}`}\n                      />\n                    )}\n                  </Card.Group>\n                  {getRepoName[0] == null ? null : (\n                    <div style={{ marginTop: 15 }}>\n                      <Button\n                        onClick={() =>\n                          window.open(\n                            `https://github.com/${githubSearch}?tab=repositories`,\n                            \"_blank\"\n                          )\n                        }\n                        color=\"black\"\n                      >\n                        <Icon name=\"github\" /> See all of {githubSearch}'s repos\n                      </Button>\n                    </div>\n                  )}\n\n                  {getRepoName[0] == null ? (\n                    <div\n                      style={{\n                        margin: 20,\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <Message info>\n                        <Message.Header className=\"text-25\">\n                          Oops ❗️\n                        </Message.Header>\n                        <p style={{ marginTop: 10, fontSize: 14 }}>\n                          No Repo found, so no top language either 😔\n                        </p>\n                      </Message>\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        margin: 20,\n                        marginTop: 50,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <Card\n                        color=\"teal\"\n                        image={`https://github-readme-stats.vercel.app/api/top-langs/?username=${githubSearch}`}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <h2\n                style={{ marginTop: 80 }}\n                class=\"ui horizontal divider header\"\n              >\n                <i class=\"clock icon\"></i>\n                {githubSearch} 's GitHub Timeline\n              </h2>\n              <ul>\n                <FlatList\n                  list={getEventsData}\n                  renderItem={renderEvent}\n                  renderWhenEmpty={() => (\n                    <div\n                      style={{\n                        marginTop: 15,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignSelf: \"center\",\n                      }}\n                    >\n                      <Message info>\n                        <Message.Header className=\"text-25\">\n                          No Activity 😔\n                        </Message.Header>\n                      </Message>\n                    </div>\n                  )}\n                />\n              </ul>\n            </div>\n          ) : userStatus == \"400\" ? (\n            <div\n              style={{\n                margin: 20,\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Message info>\n                <Message.Header className=\"text-25\">\n                  Server Error ❗️\n                </Message.Header>\n                <p style={{ marginTop: 10, fontSize: 14 }}>\n                  Please try again a few minutes later 😔\n                </p>\n              </Message>\n            </div>\n          ) : (\n            <div\n              style={{\n                margin: 20,\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Message info>\n                <Message.Header className=\"text-25\">Oops ❗️</Message.Header>\n                <p style={{ marginTop: 10 }}>\n                  This username is not available on GitHub 😔 Please check it\n                  ❗️\n                </p>\n              </Message>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/alperkaratas/Desktop/dev-flow/src/index.js",[],{"ruleId":"24","severity":1,"message":"25","line":81,"column":15,"nodeType":"26","endLine":81,"endColumn":41},{"ruleId":"27","severity":1,"message":"28","line":90,"column":42,"nodeType":"29","endLine":90,"endColumn":57},{"ruleId":"27","severity":1,"message":"28","line":153,"column":13,"nodeType":"29","endLine":153,"endColumn":28},{"ruleId":"27","severity":1,"message":"28","line":170,"column":13,"nodeType":"29","endLine":170,"endColumn":28},{"ruleId":"30","severity":1,"message":"31","line":198,"column":46,"nodeType":"32","messageId":"33","endLine":198,"endColumn":48},{"ruleId":"30","severity":1,"message":"34","line":224,"column":26,"nodeType":"32","messageId":"33","endLine":224,"endColumn":28},{"ruleId":"24","severity":1,"message":"25","line":277,"column":19,"nodeType":"26","endLine":277,"endColumn":44},{"ruleId":"24","severity":1,"message":"25","line":280,"column":19,"nodeType":"26","endLine":280,"endColumn":44},{"ruleId":"30","severity":1,"message":"34","line":438,"column":26,"nodeType":"32","messageId":"33","endLine":438,"endColumn":28},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]